name: Deploy Go Application

on: 
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Check PORT
        run: echo ${{ secrets.PORT }}
      - name: Build Docker image
        run: docker build -t manafabdulc/todos .
      - name: Push image to Docker Hub
        run: docker push manafabdulc/todos:latest    

  deploy:
    needs: build
    runs-on: self-hosted
    steps: 
      - name: Delete running container
        run: sudo docker rm -f $(sudo docker ps -aq) || true
      - name: Delete all images
        run: sudo docker rmi $(sudo docker images -aq) || true  
      - name: Pull the Docker image
        run: sudo docker pull manafabdulc/todos
      - name: Delete old container
        run: sudo docker rm -f todos || true
      - name: Create folder for volume 
        run: sudo mkdir -p /mnt/psql
      - name: Remove Postgres DB
        run: sudo docker rm -f postgres-container || true
      - name: Remove previous network
        run: sudo docker network rm my-network || true  
      - name: Create network
        run: sudo docker network create my-network        
      - name: Run DB container 
        run:  sudo docker run --init --name postgres-container --network my-network -e POSTGRES_USER=${{ secrets.DB_USER }} -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} -e POSTGRES_DB=${{ secrets.DB_NAME }} -v /mnt/psql:/var/lib/postgresql/data -p 5432:5432 -d postgres:16-alpine3.20
      - name: Run application image
        run: sudo docker run --init --name todos --network my-network -e PORT=${{ secrets.PORT }} -e DB_URL=${{ secrets.DB_URL }} -e SECRET_KEY=${{ secrets.SECRET_KEY }} -p ${{ secrets.PORT }}:${{ secrets.PORT }} -d manafabdulc/todos  
